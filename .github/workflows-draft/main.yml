name: Build and Publish

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Get FFMPEG
      run: curl =o ffmpeg.zip https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip
    
    - name: mkdir release
      run: mkdir release
    
    - name: mkdir ffmpeg-items
      run: mkdir ffmpeg-items

    - name: Unzip FFMPEG
      run: tar -xf ffmpeg.zip -C ./ffmpeg-items
    
    - name: move ./ffmpeg-items/ffmpeg.exe ./release
      run: move ./ffmpeg-items/ffmpeg.exe

    - name: move ./ffmpeg-items/ffprobe.exe ./release
      run: move ./ffmpeg-items/ffprobe.exe
    
    - name: Get Rust-obs
      run: curl https://github.com/oracularhades/rust-obs/releases/download/latest/rust-obs.exe
    
    - name: Publish
      run: dotnet publish -f net8.0-windows10.0.19041.0 -c Release -p:RuntimeIdentifierOverride=win10-x64 --no-build -o ./release

    - name: Convert ./release to zip.
      run: Compress-Archive -Path ./release -DestinationPath ./release.zip

    - name: Upload Release Assets
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
          ./release.zip
        asset_name: |
          Hades-compression.zip
        asset_content_type: application/octet-stream